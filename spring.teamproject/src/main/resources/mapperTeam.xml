<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.mysql.mapperTeam">




    <select id="login" parameterType="ModelUser" resultType="ModelUser">
        SELECT *
        FROM TB_cafe_user
        WHERE email = #{email} and passwd =
        #{passwd}
    </select>


    <insert id="insertUser" parameterType="ModelUser">

        INSERT INTO
        tb_cafe_user ( email , passwd , userphone , useraddr ,   sex ,emailselect , usernickname )
        VALUES      (#{email},#{passwd},#{userphone},#{useraddr},#{sex},#{emailselect},#{usernickname}
        )
    </insert>

    <select id="getCafeList" parameterType="java.util.Map"
        resultType="ModelCafeinfo">
        SELECT *
        FROM tb_cafe_cafeinfo
        where cafebigtype =
        #{searchValue.cafebigtype}
        <trim prefix="ORDER BY">
            <if test="orderKind == 'cafename' "> cafename ASC </if>
            <if test="orderKind == 'like_count' "> like_count DESC </if>
            <if test="orderKind == 'avg_grade' "> avg_grade DESC </if>
            <if test="orderKind == 'review_count' "> review_count DESC </if>
        </trim>
        
    </select>
    
    <select id="getCafeListName" parameterType="String"
        resultType="ModelCafeinfo">
        SELECT *
        FROM tb_cafe_cafeinfo
        where cafename LIKE CONCAT( '%' , #{cafename} , '%' )
    </select>
    
    <select id="getCafeListAddr" parameterType="String"
        resultType="ModelCafeinfo">
        SELECT *
        FROM tb_cafe_cafeinfo
        where cafeaddr LIKE CONCAT( '%' , #{cafeaddr} , '%' )
    </select>


    <select id="getCafecd" parameterType="String" resultType="String">
        select menucd from tb_cafe_menu 
        where brand = #{brand} 
        group by menucd 
        order by brand;
    
    </select>
    
    <select id="getCafeMenu" parameterType="String" resultType="ModelCafeMenu">
        select * from tb_cafe_menu 
        where menucd = #{menucd} and brand = #{brand};

    </select>
    
    
    <insert id="insertReview" parameterType="ModelCafeReview">
        INSERT INTO tb_cafe_review (usernickname, cafeno, content, grade,regdate) 
                            VALUES (#{usernickname}, #{cafeno}, #{content}, #{grade},now());
    </insert>
    
    <select id="getReviewList" parameterType="Integer" resultType="ModelCafeReview">
        select * from tb_cafe_review 
        where cafeno = #{cafeno} 
        order by commentno desc;

    </select>


    <!-- <insert id = "insertTeam" parameterType = "ModelUser"> INSERT INTO 
        tb_cafe_user ( email , passwd , userphone , useraddr , sex , emailselect 
        , usernickname ) VALUES ( #{email}, #{passwd}, #{userphone}, #{useraddr}, 
        #{sex}, #{emailselect} , #{usernickname} ) </insert> -->



    <update id="updateUserinfo" parameterType="hashmap">
        UPDATE tb_cafe_user
        SET
        passwd = #{updateValue.passwd}
        , userphone =
        #{updateValue.userphone}
        , useraddr = #{updateValue.useraddr}
        ,
        sex = #{updateValue.sex}
        , usernickname =
        #{updateValue.usernickname}
        , emailselect =
        #{updateValue.emailselect}

        WHERE email = #{searcheValue.email}

    </update>

    <update id="updatePasswd" parameterType="hashmap">
        UPDATE
        TB_cafe_user
        SET passwd = #{updateValue.passwd}
        WHERE email = #{searchValue.email}
    </update>

    <delete id="deleteUser" parameterType="ModelUser">
        DELETE FROM TB_cafe_user
        WHERE 1 = 1
        <if test="email != null and email != ''">
            and email = #{email}
        </if>
    </delete>
    
    <update id="updateReview" parameterType="ModelCafeReview">
        update tb_cafe_review set content = #{content}, updateDate = now()
        where 1 = 1 and commentno = #{commentno} and cafeno = #{cafeno}
    </update>
    

</mapper>

